// <auto-generated />
using System;
using EquipmentAccountingIS.App.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace RCCProgressAccountingOfEquipmentOfSpacecraft.Migrations
{
    [DbContext(typeof(EfModel))]
    partial class EfModelModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("EquipmentAccountingIS.Data.Entities.AccessType", b =>
                {
                    b.Property<int>("AccessTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccessType_id");

                    b.Property<string>("AccessTypeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("AccessTypeId");

                    b.ToTable("AccessTypes");
                });

            modelBuilder.Entity("EquipmentAccountingIS.Data.Entities.EquipmentType", b =>
                {
                    b.Property<int>("EquipmentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EquipmentType_id");

                    b.Property<string>("EquipmentTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("EquipmentTypeId");

                    b.ToTable("EquipmentTypes");
                });

            modelBuilder.Entity("EquipmentAccountingIS.Data.Entities.Manufacturer", b =>
                {
                    b.Property<int>("ManufacturerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Manufacturer_id");

                    b.Property<string>("ManufacturerFullName")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("ManufacturerShortName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("ManufacturerId");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("EquipmentAccountingIS.Data.Entities.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Post_id");

                    b.Property<string>("PostName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.HasKey("PostId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("EquipmentAccountingIS.Data.Entities.ResponsibleEmployee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Employee_id");

                    b.Property<int>("AccessType")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeFirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("EmployeeInitials")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("EmployeeLastName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("EmployeeLogin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeePassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeSecondName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Post")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "AccessType" }, "fk_ResponsibleEmployees_AccessTypes1_idx");

                    b.HasIndex(new[] { "Post" }, "fk_ResponsibleEmployees_Posts1_idx");

                    b.ToTable("ResponsibleEmployees");
                });

            modelBuilder.Entity("EquipmentAccountingIS.Data.Entities.StoredUnit", b =>
                {
                    b.Property<int>("SunitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SUnit_id");

                    b.Property<DateTime?>("DateOfWriteOff")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasMaxLength(325)
                        .HasColumnType("varchar(325)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SignOfDeleting")
                        .HasMaxLength(1)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<int>("SupplyContract")
                        .HasColumnType("int");

                    b.Property<int>("UnitInfo")
                        .HasColumnType("int");

                    b.Property<int>("WhoAdded")
                        .HasColumnType("int");

                    b.HasKey("SunitId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "WhoAdded" }, "fk_StoredUnits_ResponsibleEmployees1_idx");

                    b.HasIndex(new[] { "SupplyContract" }, "fk_StoredUnits_SupplyContracts1_idx1");

                    b.HasIndex(new[] { "UnitInfo" }, "fk_StoredUnits_UnitInfo1_idx1");

                    b.ToTable("StoredUnits");
                });

            modelBuilder.Entity("EquipmentAccountingIS.Data.Entities.SupplyContract", b =>
                {
                    b.Property<int>("SupplyContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SupplyContract_id");

                    b.Property<int>("ManufacturerShortName")
                        .HasColumnType("int");

                    b.Property<string>("SupplyContractCodename")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.HasKey("SupplyContractId");

                    b.HasIndex(new[] { "ManufacturerShortName" }, "fk_SupplyContracts_Manufacturers1_idx");

                    b.ToTable("SupplyContracts");
                });

            modelBuilder.Entity("EquipmentAccountingIS.Data.Entities.UnitInfo", b =>
                {
                    b.Property<int>("UnitInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UnitInfo_id");

                    b.Property<string>("EquipmentCodename")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("EquipmentName")
                        .IsRequired()
                        .HasMaxLength(175)
                        .HasColumnType("varchar(175)");

                    b.Property<string>("EquipmentPassport")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<int>("EquipmentType")
                        .HasColumnType("int");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("longblob");

                    b.HasKey("UnitInfoId");

                    b.HasIndex(new[] { "EquipmentType" }, "fk_UnitInfo_EquipmentTypes1_idx");

                    b.ToTable("UnitInfo", (string)null);
                });

            modelBuilder.Entity("EquipmentAccountingIS.Data.Entities.ResponsibleEmployee", b =>
                {
                    b.HasOne("EquipmentAccountingIS.Data.Entities.AccessType", "AccessTypeNavigation")
                        .WithMany("ResponsibleEmployees")
                        .HasForeignKey("AccessType")
                        .IsRequired()
                        .HasConstraintName("fk_ResponsibleEmployees_AccessTypes1");

                    b.HasOne("EquipmentAccountingIS.Data.Entities.Post", "PostNavigation")
                        .WithMany("ResponsibleEmployees")
                        .HasForeignKey("Post")
                        .IsRequired()
                        .HasConstraintName("fk_ResponsibleEmployees_Posts1");

                    b.Navigation("AccessTypeNavigation");

                    b.Navigation("PostNavigation");
                });

            modelBuilder.Entity("EquipmentAccountingIS.Data.Entities.StoredUnit", b =>
                {
                    b.HasOne("EquipmentAccountingIS.Data.Entities.SupplyContract", "SupplyContractNavigation")
                        .WithMany("StoredUnits")
                        .HasForeignKey("SupplyContract")
                        .IsRequired()
                        .HasConstraintName("fk_StoredUnits_SupplyContracts1");

                    b.HasOne("EquipmentAccountingIS.Data.Entities.UnitInfo", "UnitInfoNavigation")
                        .WithMany("StoredUnits")
                        .HasForeignKey("UnitInfo")
                        .IsRequired()
                        .HasConstraintName("fk_StoredUnits_UnitInfo1");

                    b.HasOne("EquipmentAccountingIS.Data.Entities.ResponsibleEmployee", "WhoAddedNavigation")
                        .WithMany("StoredUnits")
                        .HasForeignKey("WhoAdded")
                        .IsRequired()
                        .HasConstraintName("fk_StoredUnits_ResponsibleEmployees1");

                    b.Navigation("SupplyContractNavigation");

                    b.Navigation("UnitInfoNavigation");

                    b.Navigation("WhoAddedNavigation");
                });

            modelBuilder.Entity("EquipmentAccountingIS.Data.Entities.SupplyContract", b =>
                {
                    b.HasOne("EquipmentAccountingIS.Data.Entities.Manufacturer", "ManufacturerShortNameNavigation")
                        .WithMany("SupplyContracts")
                        .HasForeignKey("ManufacturerShortName")
                        .IsRequired()
                        .HasConstraintName("fk_SupplyContracts_Manufacturers1");

                    b.Navigation("ManufacturerShortNameNavigation");
                });

            modelBuilder.Entity("EquipmentAccountingIS.Data.Entities.UnitInfo", b =>
                {
                    b.HasOne("EquipmentAccountingIS.Data.Entities.EquipmentType", "EquipmentTypeNavigation")
                        .WithMany("UnitInfos")
                        .HasForeignKey("EquipmentType")
                        .IsRequired()
                        .HasConstraintName("fk_UnitInfo_EquipmentTypes1");

                    b.Navigation("EquipmentTypeNavigation");
                });

            modelBuilder.Entity("EquipmentAccountingIS.Data.Entities.AccessType", b =>
                {
                    b.Navigation("ResponsibleEmployees");
                });

            modelBuilder.Entity("EquipmentAccountingIS.Data.Entities.EquipmentType", b =>
                {
                    b.Navigation("UnitInfos");
                });

            modelBuilder.Entity("EquipmentAccountingIS.Data.Entities.Manufacturer", b =>
                {
                    b.Navigation("SupplyContracts");
                });

            modelBuilder.Entity("EquipmentAccountingIS.Data.Entities.Post", b =>
                {
                    b.Navigation("ResponsibleEmployees");
                });

            modelBuilder.Entity("EquipmentAccountingIS.Data.Entities.ResponsibleEmployee", b =>
                {
                    b.Navigation("StoredUnits");
                });

            modelBuilder.Entity("EquipmentAccountingIS.Data.Entities.SupplyContract", b =>
                {
                    b.Navigation("StoredUnits");
                });

            modelBuilder.Entity("EquipmentAccountingIS.Data.Entities.UnitInfo", b =>
                {
                    b.Navigation("StoredUnits");
                });
#pragma warning restore 612, 618
        }
    }
}
